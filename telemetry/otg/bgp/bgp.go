/*
Package bgp is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/alexmasi/go/pkg/mod/github.com/openconfig/ygot@v0.25.2/genutil/names.go
using the following YANG input files:
  - models-yang/models/isis/open-traffic-generator-isis.yang
  - models-yang/models/types/open-traffic-generator-types.yang
  - models-yang/models/flow/open-traffic-generator-flow.yang
  - models-yang/models/discovery/open-traffic-generator-discovery.yang
  - models-yang/models/interface/open-traffic-generator-port.yang
  - models-yang/models/bgp/open-traffic-generator-bgp.yang
  - models-yang/models/lag/open-traffic-generator-lag.yang
  - models-yang/models/lacp/open-traffic-generator-lacp.yang

Imported modules were sourced from:
  - models-yang/models/...
*/
package bgp

import (
	oc "github.com/openconfig/ondatra/telemetry/otg"
	"github.com/openconfig/ygot/ygot"
)

// BgpPeerPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer YANG schema element.
type BgpPeerPath struct {
	*ygot.NodePath
}

// BgpPeerPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer YANG schema element.
type BgpPeerPathAny struct {
	*ygot.NodePath
}

// BgpPeer_NamePath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/name YANG schema element.
type BgpPeer_NamePath struct {
	*ygot.NodePath
}

// BgpPeer_NamePathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/name YANG schema element.
type BgpPeer_NamePathAny struct {
	*ygot.NodePath
}

// BgpPeer_SessionStatePath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/session-state YANG schema element.
type BgpPeer_SessionStatePath struct {
	*ygot.NodePath
}

// BgpPeer_SessionStatePathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/session-state YANG schema element.
type BgpPeer_SessionStatePathAny struct {
	*ygot.NodePath
}

// Counters (container): Counters of an individual BGP peer.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/counters"
// Path from root: "/bgp-peers/bgp-peer/state/counters"
func (n *BgpPeerPath) Counters() *BgpPeer_CountersPath {
	return &BgpPeer_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Counters of an individual BGP peer.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/counters"
// Path from root: "/bgp-peers/bgp-peer/state/counters"
func (n *BgpPeerPathAny) Counters() *BgpPeer_CountersPathAny {
	return &BgpPeer_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): An arbitary name of the BGP peer determined by the ATE
// configuration.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/name"
// Path from root: "/bgp-peers/bgp-peer/state/name"
func (n *BgpPeerPath) Name() *BgpPeer_NamePath {
	return &BgpPeer_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): An arbitary name of the BGP peer determined by the ATE
// configuration.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/name"
// Path from root: "/bgp-peers/bgp-peer/state/name"
func (n *BgpPeerPathAny) Name() *BgpPeer_NamePathAny {
	return &BgpPeer_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SessionState (leaf): Operational state of the BGP peer
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/session-state"
// Path from root: "/bgp-peers/bgp-peer/state/session-state"
func (n *BgpPeerPath) SessionState() *BgpPeer_SessionStatePath {
	return &BgpPeer_SessionStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "session-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// SessionState (leaf): Operational state of the BGP peer
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/session-state"
// Path from root: "/bgp-peers/bgp-peer/state/session-state"
func (n *BgpPeerPathAny) SessionState() *BgpPeer_SessionStatePathAny {
	return &BgpPeer_SessionStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "session-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnicastIpv4PrefixAny (list): A list of BGP unicast IPv4 prefixes.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "unicast-ipv4-prefixes/unicast-ipv4-prefix"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix"
func (n *BgpPeerPath) UnicastIpv4PrefixAny() *BgpPeer_UnicastIpv4PrefixPathAny {
	return &BgpPeer_UnicastIpv4PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unicast-ipv4-prefixes", "unicast-ipv4-prefix"},
			map[string]interface{}{"address": "*", "prefix-length": "*", "origin": "*", "path-id": "*"},
			n,
		),
	}
}

// UnicastIpv4PrefixAny (list): A list of BGP unicast IPv4 prefixes.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "unicast-ipv4-prefixes/unicast-ipv4-prefix"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix"
func (n *BgpPeerPathAny) UnicastIpv4PrefixAny() *BgpPeer_UnicastIpv4PrefixPathAny {
	return &BgpPeer_UnicastIpv4PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unicast-ipv4-prefixes", "unicast-ipv4-prefix"},
			map[string]interface{}{"address": "*", "prefix-length": "*", "origin": "*", "path-id": "*"},
			n,
		),
	}
}

// WithAddress sets BgpPeer_UnicastIpv4PrefixPathAny's key "address" to the specified value.
// Address: string
func (n *BgpPeer_UnicastIpv4PrefixPathAny) WithAddress(Address string) *BgpPeer_UnicastIpv4PrefixPathAny {
	ygot.ModifyKey(n.NodePath, "address", Address)
	return n
}

// WithPrefixLength sets BgpPeer_UnicastIpv4PrefixPathAny's key "prefix-length" to the specified value.
// PrefixLength: uint32
func (n *BgpPeer_UnicastIpv4PrefixPathAny) WithPrefixLength(PrefixLength uint32) *BgpPeer_UnicastIpv4PrefixPathAny {
	ygot.ModifyKey(n.NodePath, "prefix-length", PrefixLength)
	return n
}

// WithOrigin sets BgpPeer_UnicastIpv4PrefixPathAny's key "origin" to the specified value.
// Origin: oc.E_UnicastIpv4Prefix_Origin
func (n *BgpPeer_UnicastIpv4PrefixPathAny) WithOrigin(Origin oc.E_UnicastIpv4Prefix_Origin) *BgpPeer_UnicastIpv4PrefixPathAny {
	ygot.ModifyKey(n.NodePath, "origin", Origin)
	return n
}

// WithPathId sets BgpPeer_UnicastIpv4PrefixPathAny's key "path-id" to the specified value.
// PathId: uint32
func (n *BgpPeer_UnicastIpv4PrefixPathAny) WithPathId(PathId uint32) *BgpPeer_UnicastIpv4PrefixPathAny {
	ygot.ModifyKey(n.NodePath, "path-id", PathId)
	return n
}

// UnicastIpv6PrefixAny (list): A list of BGP unicast IPv6 prefixes.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "unicast-ipv6-prefixes/unicast-ipv6-prefix"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix"
func (n *BgpPeerPath) UnicastIpv6PrefixAny() *BgpPeer_UnicastIpv6PrefixPathAny {
	return &BgpPeer_UnicastIpv6PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unicast-ipv6-prefixes", "unicast-ipv6-prefix"},
			map[string]interface{}{"address": "*", "prefix-length": "*", "origin": "*", "path-id": "*"},
			n,
		),
	}
}

// UnicastIpv6PrefixAny (list): A list of BGP unicast IPv6 prefixes.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "unicast-ipv6-prefixes/unicast-ipv6-prefix"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix"
func (n *BgpPeerPathAny) UnicastIpv6PrefixAny() *BgpPeer_UnicastIpv6PrefixPathAny {
	return &BgpPeer_UnicastIpv6PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unicast-ipv6-prefixes", "unicast-ipv6-prefix"},
			map[string]interface{}{"address": "*", "prefix-length": "*", "origin": "*", "path-id": "*"},
			n,
		),
	}
}

// WithAddress sets BgpPeer_UnicastIpv6PrefixPathAny's key "address" to the specified value.
// Address: string
func (n *BgpPeer_UnicastIpv6PrefixPathAny) WithAddress(Address string) *BgpPeer_UnicastIpv6PrefixPathAny {
	ygot.ModifyKey(n.NodePath, "address", Address)
	return n
}

// WithPrefixLength sets BgpPeer_UnicastIpv6PrefixPathAny's key "prefix-length" to the specified value.
// PrefixLength: uint32
func (n *BgpPeer_UnicastIpv6PrefixPathAny) WithPrefixLength(PrefixLength uint32) *BgpPeer_UnicastIpv6PrefixPathAny {
	ygot.ModifyKey(n.NodePath, "prefix-length", PrefixLength)
	return n
}

// WithOrigin sets BgpPeer_UnicastIpv6PrefixPathAny's key "origin" to the specified value.
// Origin: oc.E_UnicastIpv6Prefix_Origin
func (n *BgpPeer_UnicastIpv6PrefixPathAny) WithOrigin(Origin oc.E_UnicastIpv6Prefix_Origin) *BgpPeer_UnicastIpv6PrefixPathAny {
	ygot.ModifyKey(n.NodePath, "origin", Origin)
	return n
}

// WithPathId sets BgpPeer_UnicastIpv6PrefixPathAny's key "path-id" to the specified value.
// PathId: uint32
func (n *BgpPeer_UnicastIpv6PrefixPathAny) WithPathId(PathId uint32) *BgpPeer_UnicastIpv6PrefixPathAny {
	ygot.ModifyKey(n.NodePath, "path-id", PathId)
	return n
}

// BgpPeer_CountersPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters YANG schema element.
type BgpPeer_CountersPath struct {
	*ygot.NodePath
}

// BgpPeer_CountersPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters YANG schema element.
type BgpPeer_CountersPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_FlapsPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/flaps YANG schema element.
type BgpPeer_Counters_FlapsPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_FlapsPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/flaps YANG schema element.
type BgpPeer_Counters_FlapsPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InKeepalivesPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-keepalives YANG schema element.
type BgpPeer_Counters_InKeepalivesPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InKeepalivesPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-keepalives YANG schema element.
type BgpPeer_Counters_InKeepalivesPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InNotificationsPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-notifications YANG schema element.
type BgpPeer_Counters_InNotificationsPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InNotificationsPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-notifications YANG schema element.
type BgpPeer_Counters_InNotificationsPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InOpensPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-opens YANG schema element.
type BgpPeer_Counters_InOpensPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InOpensPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-opens YANG schema element.
type BgpPeer_Counters_InOpensPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InRouteWithdrawPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-route-withdraw YANG schema element.
type BgpPeer_Counters_InRouteWithdrawPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InRouteWithdrawPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-route-withdraw YANG schema element.
type BgpPeer_Counters_InRouteWithdrawPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InRoutesPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-routes YANG schema element.
type BgpPeer_Counters_InRoutesPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InRoutesPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-routes YANG schema element.
type BgpPeer_Counters_InRoutesPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InUpdatesPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-updates YANG schema element.
type BgpPeer_Counters_InUpdatesPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_InUpdatesPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/in-updates YANG schema element.
type BgpPeer_Counters_InUpdatesPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutKeepalivesPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-keepalives YANG schema element.
type BgpPeer_Counters_OutKeepalivesPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutKeepalivesPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-keepalives YANG schema element.
type BgpPeer_Counters_OutKeepalivesPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutNotificationsPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-notifications YANG schema element.
type BgpPeer_Counters_OutNotificationsPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutNotificationsPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-notifications YANG schema element.
type BgpPeer_Counters_OutNotificationsPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutOpensPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-opens YANG schema element.
type BgpPeer_Counters_OutOpensPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutOpensPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-opens YANG schema element.
type BgpPeer_Counters_OutOpensPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutRouteWithdrawPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-route-withdraw YANG schema element.
type BgpPeer_Counters_OutRouteWithdrawPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutRouteWithdrawPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-route-withdraw YANG schema element.
type BgpPeer_Counters_OutRouteWithdrawPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutRoutesPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-routes YANG schema element.
type BgpPeer_Counters_OutRoutesPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutRoutesPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-routes YANG schema element.
type BgpPeer_Counters_OutRoutesPathAny struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutUpdatesPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-updates YANG schema element.
type BgpPeer_Counters_OutUpdatesPath struct {
	*ygot.NodePath
}

// BgpPeer_Counters_OutUpdatesPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/state/counters/out-updates YANG schema element.
type BgpPeer_Counters_OutUpdatesPathAny struct {
	*ygot.NodePath
}

// Flaps (leaf): The total number of times the BGP session went from an
// ESTABLISHED state to an IDLE state.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "flaps"
// Path from root: "/bgp-peers/bgp-peer/state/counters/flaps"
func (n *BgpPeer_CountersPath) Flaps() *BgpPeer_Counters_FlapsPath {
	return &BgpPeer_Counters_FlapsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flaps"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flaps (leaf): The total number of times the BGP session went from an
// ESTABLISHED state to an IDLE state.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "flaps"
// Path from root: "/bgp-peers/bgp-peer/state/counters/flaps"
func (n *BgpPeer_CountersPathAny) Flaps() *BgpPeer_Counters_FlapsPathAny {
	return &BgpPeer_Counters_FlapsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flaps"},
			map[string]interface{}{},
			n,
		),
	}
}

// InKeepalives (leaf): The total number of KEEPALIVE messages received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-keepalives"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-keepalives"
func (n *BgpPeer_CountersPath) InKeepalives() *BgpPeer_Counters_InKeepalivesPath {
	return &BgpPeer_Counters_InKeepalivesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-keepalives"},
			map[string]interface{}{},
			n,
		),
	}
}

// InKeepalives (leaf): The total number of KEEPALIVE messages received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-keepalives"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-keepalives"
func (n *BgpPeer_CountersPathAny) InKeepalives() *BgpPeer_Counters_InKeepalivesPathAny {
	return &BgpPeer_Counters_InKeepalivesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-keepalives"},
			map[string]interface{}{},
			n,
		),
	}
}

// InNotifications (leaf): The total number of NOTIFICATION messages received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-notifications"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-notifications"
func (n *BgpPeer_CountersPath) InNotifications() *BgpPeer_Counters_InNotificationsPath {
	return &BgpPeer_Counters_InNotificationsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-notifications"},
			map[string]interface{}{},
			n,
		),
	}
}

// InNotifications (leaf): The total number of NOTIFICATION messages received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-notifications"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-notifications"
func (n *BgpPeer_CountersPathAny) InNotifications() *BgpPeer_Counters_InNotificationsPathAny {
	return &BgpPeer_Counters_InNotificationsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-notifications"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOpens (leaf): The total number of OPEN messages received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-opens"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-opens"
func (n *BgpPeer_CountersPath) InOpens() *BgpPeer_Counters_InOpensPath {
	return &BgpPeer_Counters_InOpensPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-opens"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOpens (leaf): The total number of OPEN messages received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-opens"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-opens"
func (n *BgpPeer_CountersPathAny) InOpens() *BgpPeer_Counters_InOpensPathAny {
	return &BgpPeer_Counters_InOpensPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-opens"},
			map[string]interface{}{},
			n,
		),
	}
}

// InRouteWithdraw (leaf): The total number of route withdraws received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-route-withdraw"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-route-withdraw"
func (n *BgpPeer_CountersPath) InRouteWithdraw() *BgpPeer_Counters_InRouteWithdrawPath {
	return &BgpPeer_Counters_InRouteWithdrawPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-route-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// InRouteWithdraw (leaf): The total number of route withdraws received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-route-withdraw"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-route-withdraw"
func (n *BgpPeer_CountersPathAny) InRouteWithdraw() *BgpPeer_Counters_InRouteWithdrawPathAny {
	return &BgpPeer_Counters_InRouteWithdrawPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-route-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// InRoutes (leaf): The total number of routes received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-routes"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-routes"
func (n *BgpPeer_CountersPath) InRoutes() *BgpPeer_Counters_InRoutesPath {
	return &BgpPeer_Counters_InRoutesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// InRoutes (leaf): The total number of routes received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-routes"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-routes"
func (n *BgpPeer_CountersPathAny) InRoutes() *BgpPeer_Counters_InRoutesPathAny {
	return &BgpPeer_Counters_InRoutesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// InUpdates (leaf): The total number of UPDATE messages received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-updates"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-updates"
func (n *BgpPeer_CountersPath) InUpdates() *BgpPeer_Counters_InUpdatesPath {
	return &BgpPeer_Counters_InUpdatesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-updates"},
			map[string]interface{}{},
			n,
		),
	}
}

// InUpdates (leaf): The total number of UPDATE messages received.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "in-updates"
// Path from root: "/bgp-peers/bgp-peer/state/counters/in-updates"
func (n *BgpPeer_CountersPathAny) InUpdates() *BgpPeer_Counters_InUpdatesPathAny {
	return &BgpPeer_Counters_InUpdatesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-updates"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutKeepalives (leaf): The total number of KEEPALIVE messages sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-keepalives"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-keepalives"
func (n *BgpPeer_CountersPath) OutKeepalives() *BgpPeer_Counters_OutKeepalivesPath {
	return &BgpPeer_Counters_OutKeepalivesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-keepalives"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutKeepalives (leaf): The total number of KEEPALIVE messages sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-keepalives"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-keepalives"
func (n *BgpPeer_CountersPathAny) OutKeepalives() *BgpPeer_Counters_OutKeepalivesPathAny {
	return &BgpPeer_Counters_OutKeepalivesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-keepalives"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutNotifications (leaf): The total number of NOTIFICATION messages sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-notifications"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-notifications"
func (n *BgpPeer_CountersPath) OutNotifications() *BgpPeer_Counters_OutNotificationsPath {
	return &BgpPeer_Counters_OutNotificationsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-notifications"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutNotifications (leaf): The total number of NOTIFICATION messages sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-notifications"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-notifications"
func (n *BgpPeer_CountersPathAny) OutNotifications() *BgpPeer_Counters_OutNotificationsPathAny {
	return &BgpPeer_Counters_OutNotificationsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-notifications"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOpens (leaf): The total number of OPEN messages sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-opens"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-opens"
func (n *BgpPeer_CountersPath) OutOpens() *BgpPeer_Counters_OutOpensPath {
	return &BgpPeer_Counters_OutOpensPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-opens"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOpens (leaf): The total number of OPEN messages sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-opens"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-opens"
func (n *BgpPeer_CountersPathAny) OutOpens() *BgpPeer_Counters_OutOpensPathAny {
	return &BgpPeer_Counters_OutOpensPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-opens"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutRouteWithdraw (leaf): The total number of route withdraws sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-route-withdraw"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-route-withdraw"
func (n *BgpPeer_CountersPath) OutRouteWithdraw() *BgpPeer_Counters_OutRouteWithdrawPath {
	return &BgpPeer_Counters_OutRouteWithdrawPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-route-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutRouteWithdraw (leaf): The total number of route withdraws sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-route-withdraw"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-route-withdraw"
func (n *BgpPeer_CountersPathAny) OutRouteWithdraw() *BgpPeer_Counters_OutRouteWithdrawPathAny {
	return &BgpPeer_Counters_OutRouteWithdrawPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-route-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutRoutes (leaf): The total number of routes advertised.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-routes"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-routes"
func (n *BgpPeer_CountersPath) OutRoutes() *BgpPeer_Counters_OutRoutesPath {
	return &BgpPeer_Counters_OutRoutesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutRoutes (leaf): The total number of routes advertised.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-routes"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-routes"
func (n *BgpPeer_CountersPathAny) OutRoutes() *BgpPeer_Counters_OutRoutesPathAny {
	return &BgpPeer_Counters_OutRoutesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutUpdates (leaf): The total number of UPDATE messages sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-updates"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-updates"
func (n *BgpPeer_CountersPath) OutUpdates() *BgpPeer_Counters_OutUpdatesPath {
	return &BgpPeer_Counters_OutUpdatesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-updates"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutUpdates (leaf): The total number of UPDATE messages sent.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "out-updates"
// Path from root: "/bgp-peers/bgp-peer/state/counters/out-updates"
func (n *BgpPeer_CountersPathAny) OutUpdates() *BgpPeer_Counters_OutUpdatesPathAny {
	return &BgpPeer_Counters_OutUpdatesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-updates"},
			map[string]interface{}{},
			n,
		),
	}
}

// BgpPeer_UnicastIpv4PrefixPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix YANG schema element.
type BgpPeer_UnicastIpv4PrefixPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4PrefixPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix YANG schema element.
type BgpPeer_UnicastIpv4PrefixPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_AddressPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/address YANG schema element.
type BgpPeer_UnicastIpv4Prefix_AddressPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_AddressPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/address YANG schema element.
type BgpPeer_UnicastIpv4Prefix_AddressPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_NextHopIpv4AddressPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/next-hop-ipv4-address YANG schema element.
type BgpPeer_UnicastIpv4Prefix_NextHopIpv4AddressPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_NextHopIpv4AddressPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/next-hop-ipv4-address YANG schema element.
type BgpPeer_UnicastIpv4Prefix_NextHopIpv4AddressPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_NextHopIpv6AddressPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/next-hop-ipv6-address YANG schema element.
type BgpPeer_UnicastIpv4Prefix_NextHopIpv6AddressPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_NextHopIpv6AddressPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/next-hop-ipv6-address YANG schema element.
type BgpPeer_UnicastIpv4Prefix_NextHopIpv6AddressPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_OriginPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/origin YANG schema element.
type BgpPeer_UnicastIpv4Prefix_OriginPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_OriginPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/origin YANG schema element.
type BgpPeer_UnicastIpv4Prefix_OriginPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_PathIdPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/path-id YANG schema element.
type BgpPeer_UnicastIpv4Prefix_PathIdPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_PathIdPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/path-id YANG schema element.
type BgpPeer_UnicastIpv4Prefix_PathIdPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_PrefixLengthPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/prefix-length YANG schema element.
type BgpPeer_UnicastIpv4Prefix_PrefixLengthPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_PrefixLengthPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/prefix-length YANG schema element.
type BgpPeer_UnicastIpv4Prefix_PrefixLengthPathAny struct {
	*ygot.NodePath
}

// Address (leaf): The IPv4 address.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/address"
func (n *BgpPeer_UnicastIpv4PrefixPath) Address() *BgpPeer_UnicastIpv4Prefix_AddressPath {
	return &BgpPeer_UnicastIpv4Prefix_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): The IPv4 address.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/address"
func (n *BgpPeer_UnicastIpv4PrefixPathAny) Address() *BgpPeer_UnicastIpv4Prefix_AddressPathAny {
	return &BgpPeer_UnicastIpv4Prefix_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopIpv4Address (leaf): The IPv4 address of the egress interface.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/next-hop-ipv4-address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/next-hop-ipv4-address"
func (n *BgpPeer_UnicastIpv4PrefixPath) NextHopIpv4Address() *BgpPeer_UnicastIpv4Prefix_NextHopIpv4AddressPath {
	return &BgpPeer_UnicastIpv4Prefix_NextHopIpv4AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopIpv4Address (leaf): The IPv4 address of the egress interface.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/next-hop-ipv4-address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/next-hop-ipv4-address"
func (n *BgpPeer_UnicastIpv4PrefixPathAny) NextHopIpv4Address() *BgpPeer_UnicastIpv4Prefix_NextHopIpv4AddressPathAny {
	return &BgpPeer_UnicastIpv4Prefix_NextHopIpv4AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopIpv6Address (leaf): The IPv6 address of the egress interface.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/next-hop-ipv6-address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/next-hop-ipv6-address"
func (n *BgpPeer_UnicastIpv4PrefixPath) NextHopIpv6Address() *BgpPeer_UnicastIpv4Prefix_NextHopIpv6AddressPath {
	return &BgpPeer_UnicastIpv4Prefix_NextHopIpv6AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopIpv6Address (leaf): The IPv6 address of the egress interface.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/next-hop-ipv6-address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/next-hop-ipv6-address"
func (n *BgpPeer_UnicastIpv4PrefixPathAny) NextHopIpv6Address() *BgpPeer_UnicastIpv4Prefix_NextHopIpv6AddressPathAny {
	return &BgpPeer_UnicastIpv4Prefix_NextHopIpv6AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Origin (leaf): The origin of the prefix.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/origin"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/origin"
func (n *BgpPeer_UnicastIpv4PrefixPath) Origin() *BgpPeer_UnicastIpv4Prefix_OriginPath {
	return &BgpPeer_UnicastIpv4Prefix_OriginPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// Origin (leaf): The origin of the prefix.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/origin"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/origin"
func (n *BgpPeer_UnicastIpv4PrefixPathAny) Origin() *BgpPeer_UnicastIpv4Prefix_OriginPathAny {
	return &BgpPeer_UnicastIpv4Prefix_OriginPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathId (leaf): If the route is learned from a neighbor, the path-id
// corresponds to the path-id for the route in the
// corresponding adj-rib-in-post table.  If the route is
// injected from another protocol, or the neighbor does not
// support BGP add-paths, the path-id should be set
// to zero, also the default value.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/path-id"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/path-id"
func (n *BgpPeer_UnicastIpv4PrefixPath) PathId() *BgpPeer_UnicastIpv4Prefix_PathIdPath {
	return &BgpPeer_UnicastIpv4Prefix_PathIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathId (leaf): If the route is learned from a neighbor, the path-id
// corresponds to the path-id for the route in the
// corresponding adj-rib-in-post table.  If the route is
// injected from another protocol, or the neighbor does not
// support BGP add-paths, the path-id should be set
// to zero, also the default value.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/path-id"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/path-id"
func (n *BgpPeer_UnicastIpv4PrefixPathAny) PathId() *BgpPeer_UnicastIpv4Prefix_PathIdPathAny {
	return &BgpPeer_UnicastIpv4Prefix_PathIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The prefix length.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/prefix-length"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/prefix-length"
func (n *BgpPeer_UnicastIpv4PrefixPath) PrefixLength() *BgpPeer_UnicastIpv4Prefix_PrefixLengthPath {
	return &BgpPeer_UnicastIpv4Prefix_PrefixLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The prefix length.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/prefix-length"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/prefix-length"
func (n *BgpPeer_UnicastIpv4PrefixPathAny) PrefixLength() *BgpPeer_UnicastIpv4Prefix_PrefixLengthPathAny {
	return &BgpPeer_UnicastIpv4Prefix_PrefixLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// BgpPeer_UnicastIpv4Prefix_AsPathPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path YANG schema element.
type BgpPeer_UnicastIpv4Prefix_AsPathPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_AsPathPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path YANG schema element.
type BgpPeer_UnicastIpv4Prefix_AsPathPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_AsPath_AsNumbersPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path/as_numbers YANG schema element.
type BgpPeer_UnicastIpv4Prefix_AsPath_AsNumbersPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_AsPath_AsNumbersPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path/as_numbers YANG schema element.
type BgpPeer_UnicastIpv4Prefix_AsPath_AsNumbersPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_AsPath_SegmentTypePath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path/segment-type YANG schema element.
type BgpPeer_UnicastIpv4Prefix_AsPath_SegmentTypePath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_AsPath_SegmentTypePathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path/segment-type YANG schema element.
type BgpPeer_UnicastIpv4Prefix_AsPath_SegmentTypePathAny struct {
	*ygot.NodePath
}

// AsNumbers (leaf-list): The AS numbers in this AS path segment.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "as_numbers"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path/as_numbers"
func (n *BgpPeer_UnicastIpv4Prefix_AsPathPath) AsNumbers() *BgpPeer_UnicastIpv4Prefix_AsPath_AsNumbersPath {
	return &BgpPeer_UnicastIpv4Prefix_AsPath_AsNumbersPath{
		NodePath: ygot.NewNodePath(
			[]string{"as_numbers"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsNumbers (leaf-list): The AS numbers in this AS path segment.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "as_numbers"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path/as_numbers"
func (n *BgpPeer_UnicastIpv4Prefix_AsPathPathAny) AsNumbers() *BgpPeer_UnicastIpv4Prefix_AsPath_AsNumbersPathAny {
	return &BgpPeer_UnicastIpv4Prefix_AsPath_AsNumbersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"as_numbers"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentType (leaf): Enumeration of segment types.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "segment-type"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path/segment-type"
func (n *BgpPeer_UnicastIpv4Prefix_AsPathPath) SegmentType() *BgpPeer_UnicastIpv4Prefix_AsPath_SegmentTypePath {
	return &BgpPeer_UnicastIpv4Prefix_AsPath_SegmentTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentType (leaf): Enumeration of segment types.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "segment-type"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/as-path/segment-type"
func (n *BgpPeer_UnicastIpv4Prefix_AsPathPathAny) SegmentType() *BgpPeer_UnicastIpv4Prefix_AsPath_SegmentTypePathAny {
	return &BgpPeer_UnicastIpv4Prefix_AsPath_SegmentTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// BgpPeer_UnicastIpv4Prefix_CommunityPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community YANG schema element.
type BgpPeer_UnicastIpv4Prefix_CommunityPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_CommunityPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community YANG schema element.
type BgpPeer_UnicastIpv4Prefix_CommunityPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_Community_CommunityTypePath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/community-type YANG schema element.
type BgpPeer_UnicastIpv4Prefix_Community_CommunityTypePath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_Community_CommunityTypePathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/community-type YANG schema element.
type BgpPeer_UnicastIpv4Prefix_Community_CommunityTypePathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_Community_CustomAsNumberPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/custom-as-number YANG schema element.
type BgpPeer_UnicastIpv4Prefix_Community_CustomAsNumberPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_Community_CustomAsNumberPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/custom-as-number YANG schema element.
type BgpPeer_UnicastIpv4Prefix_Community_CustomAsNumberPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_Community_CustomAsValuePath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/custom-as-value YANG schema element.
type BgpPeer_UnicastIpv4Prefix_Community_CustomAsValuePath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv4Prefix_Community_CustomAsValuePathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/custom-as-value YANG schema element.
type BgpPeer_UnicastIpv4Prefix_Community_CustomAsValuePathAny struct {
	*ygot.NodePath
}

// CommunityType (leaf): The type of community AS number.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "community-type"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/community-type"
func (n *BgpPeer_UnicastIpv4Prefix_CommunityPath) CommunityType() *BgpPeer_UnicastIpv4Prefix_Community_CommunityTypePath {
	return &BgpPeer_UnicastIpv4Prefix_Community_CommunityTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"community-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityType (leaf): The type of community AS number.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "community-type"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/community-type"
func (n *BgpPeer_UnicastIpv4Prefix_CommunityPathAny) CommunityType() *BgpPeer_UnicastIpv4Prefix_Community_CommunityTypePathAny {
	return &BgpPeer_UnicastIpv4Prefix_Community_CommunityTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"community-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CustomAsNumber (leaf): First two octets of 32 bit community AS number between 0 to 65535.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "custom-as-number"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/custom-as-number"
func (n *BgpPeer_UnicastIpv4Prefix_CommunityPath) CustomAsNumber() *BgpPeer_UnicastIpv4Prefix_Community_CustomAsNumberPath {
	return &BgpPeer_UnicastIpv4Prefix_Community_CustomAsNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"custom-as-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// CustomAsNumber (leaf): First two octets of 32 bit community AS number between 0 to 65535.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "custom-as-number"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/custom-as-number"
func (n *BgpPeer_UnicastIpv4Prefix_CommunityPathAny) CustomAsNumber() *BgpPeer_UnicastIpv4Prefix_Community_CustomAsNumberPathAny {
	return &BgpPeer_UnicastIpv4Prefix_Community_CustomAsNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"custom-as-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// CustomAsValue (leaf): Last two octets of 32 bit community AS value between 0 to 65535.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "custom-as-value"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/custom-as-value"
func (n *BgpPeer_UnicastIpv4Prefix_CommunityPath) CustomAsValue() *BgpPeer_UnicastIpv4Prefix_Community_CustomAsValuePath {
	return &BgpPeer_UnicastIpv4Prefix_Community_CustomAsValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"custom-as-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// CustomAsValue (leaf): Last two octets of 32 bit community AS value between 0 to 65535.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "custom-as-value"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv4-prefixes/unicast-ipv4-prefix/state/community/custom-as-value"
func (n *BgpPeer_UnicastIpv4Prefix_CommunityPathAny) CustomAsValue() *BgpPeer_UnicastIpv4Prefix_Community_CustomAsValuePathAny {
	return &BgpPeer_UnicastIpv4Prefix_Community_CustomAsValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"custom-as-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// BgpPeer_UnicastIpv6PrefixPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix YANG schema element.
type BgpPeer_UnicastIpv6PrefixPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6PrefixPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix YANG schema element.
type BgpPeer_UnicastIpv6PrefixPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_AddressPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/address YANG schema element.
type BgpPeer_UnicastIpv6Prefix_AddressPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_AddressPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/address YANG schema element.
type BgpPeer_UnicastIpv6Prefix_AddressPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_NextHopIpv4AddressPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/next-hop-ipv4-address YANG schema element.
type BgpPeer_UnicastIpv6Prefix_NextHopIpv4AddressPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_NextHopIpv4AddressPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/next-hop-ipv4-address YANG schema element.
type BgpPeer_UnicastIpv6Prefix_NextHopIpv4AddressPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_NextHopIpv6AddressPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/next-hop-ipv6-address YANG schema element.
type BgpPeer_UnicastIpv6Prefix_NextHopIpv6AddressPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_NextHopIpv6AddressPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/next-hop-ipv6-address YANG schema element.
type BgpPeer_UnicastIpv6Prefix_NextHopIpv6AddressPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_OriginPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/origin YANG schema element.
type BgpPeer_UnicastIpv6Prefix_OriginPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_OriginPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/origin YANG schema element.
type BgpPeer_UnicastIpv6Prefix_OriginPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_PathIdPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/path-id YANG schema element.
type BgpPeer_UnicastIpv6Prefix_PathIdPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_PathIdPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/path-id YANG schema element.
type BgpPeer_UnicastIpv6Prefix_PathIdPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_PrefixLengthPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/prefix-length YANG schema element.
type BgpPeer_UnicastIpv6Prefix_PrefixLengthPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_PrefixLengthPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/prefix-length YANG schema element.
type BgpPeer_UnicastIpv6Prefix_PrefixLengthPathAny struct {
	*ygot.NodePath
}

// Address (leaf): The IPv6 address.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/address"
func (n *BgpPeer_UnicastIpv6PrefixPath) Address() *BgpPeer_UnicastIpv6Prefix_AddressPath {
	return &BgpPeer_UnicastIpv6Prefix_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): The IPv6 address.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/address"
func (n *BgpPeer_UnicastIpv6PrefixPathAny) Address() *BgpPeer_UnicastIpv6Prefix_AddressPathAny {
	return &BgpPeer_UnicastIpv6Prefix_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopIpv4Address (leaf): The IPv4 address of the egress interface.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/next-hop-ipv4-address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/next-hop-ipv4-address"
func (n *BgpPeer_UnicastIpv6PrefixPath) NextHopIpv4Address() *BgpPeer_UnicastIpv6Prefix_NextHopIpv4AddressPath {
	return &BgpPeer_UnicastIpv6Prefix_NextHopIpv4AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopIpv4Address (leaf): The IPv4 address of the egress interface.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/next-hop-ipv4-address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/next-hop-ipv4-address"
func (n *BgpPeer_UnicastIpv6PrefixPathAny) NextHopIpv4Address() *BgpPeer_UnicastIpv6Prefix_NextHopIpv4AddressPathAny {
	return &BgpPeer_UnicastIpv6Prefix_NextHopIpv4AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopIpv6Address (leaf): The IPv6 address of the egress interface.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/next-hop-ipv6-address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/next-hop-ipv6-address"
func (n *BgpPeer_UnicastIpv6PrefixPath) NextHopIpv6Address() *BgpPeer_UnicastIpv6Prefix_NextHopIpv6AddressPath {
	return &BgpPeer_UnicastIpv6Prefix_NextHopIpv6AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopIpv6Address (leaf): The IPv6 address of the egress interface.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/next-hop-ipv6-address"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/next-hop-ipv6-address"
func (n *BgpPeer_UnicastIpv6PrefixPathAny) NextHopIpv6Address() *BgpPeer_UnicastIpv6Prefix_NextHopIpv6AddressPathAny {
	return &BgpPeer_UnicastIpv6Prefix_NextHopIpv6AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Origin (leaf): The origin of the prefix.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/origin"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/origin"
func (n *BgpPeer_UnicastIpv6PrefixPath) Origin() *BgpPeer_UnicastIpv6Prefix_OriginPath {
	return &BgpPeer_UnicastIpv6Prefix_OriginPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// Origin (leaf): The origin of the prefix.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/origin"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/origin"
func (n *BgpPeer_UnicastIpv6PrefixPathAny) Origin() *BgpPeer_UnicastIpv6Prefix_OriginPathAny {
	return &BgpPeer_UnicastIpv6Prefix_OriginPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathId (leaf): If the route is learned from a neighbor, the path-id
// corresponds to the path-id for the route in the
// corresponding adj-rib-in-post table.  If the route is
// injected from another protocol, or the neighbor does not
// support BGP add-paths, the path-id should be set
// to zero, also the default value.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/path-id"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/path-id"
func (n *BgpPeer_UnicastIpv6PrefixPath) PathId() *BgpPeer_UnicastIpv6Prefix_PathIdPath {
	return &BgpPeer_UnicastIpv6Prefix_PathIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathId (leaf): If the route is learned from a neighbor, the path-id
// corresponds to the path-id for the route in the
// corresponding adj-rib-in-post table.  If the route is
// injected from another protocol, or the neighbor does not
// support BGP add-paths, the path-id should be set
// to zero, also the default value.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/path-id"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/path-id"
func (n *BgpPeer_UnicastIpv6PrefixPathAny) PathId() *BgpPeer_UnicastIpv6Prefix_PathIdPathAny {
	return &BgpPeer_UnicastIpv6Prefix_PathIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The prefix length.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/prefix-length"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/prefix-length"
func (n *BgpPeer_UnicastIpv6PrefixPath) PrefixLength() *BgpPeer_UnicastIpv6Prefix_PrefixLengthPath {
	return &BgpPeer_UnicastIpv6Prefix_PrefixLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The prefix length.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "state/prefix-length"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/prefix-length"
func (n *BgpPeer_UnicastIpv6PrefixPathAny) PrefixLength() *BgpPeer_UnicastIpv6Prefix_PrefixLengthPathAny {
	return &BgpPeer_UnicastIpv6Prefix_PrefixLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// BgpPeer_UnicastIpv6Prefix_AsPathPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path YANG schema element.
type BgpPeer_UnicastIpv6Prefix_AsPathPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_AsPathPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path YANG schema element.
type BgpPeer_UnicastIpv6Prefix_AsPathPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_AsPath_AsNumbersPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path/as_numbers YANG schema element.
type BgpPeer_UnicastIpv6Prefix_AsPath_AsNumbersPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_AsPath_AsNumbersPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path/as_numbers YANG schema element.
type BgpPeer_UnicastIpv6Prefix_AsPath_AsNumbersPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_AsPath_SegmentTypePath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path/segment-type YANG schema element.
type BgpPeer_UnicastIpv6Prefix_AsPath_SegmentTypePath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_AsPath_SegmentTypePathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path/segment-type YANG schema element.
type BgpPeer_UnicastIpv6Prefix_AsPath_SegmentTypePathAny struct {
	*ygot.NodePath
}

// AsNumbers (leaf-list): The AS numbers in this AS path segment.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "as_numbers"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path/as_numbers"
func (n *BgpPeer_UnicastIpv6Prefix_AsPathPath) AsNumbers() *BgpPeer_UnicastIpv6Prefix_AsPath_AsNumbersPath {
	return &BgpPeer_UnicastIpv6Prefix_AsPath_AsNumbersPath{
		NodePath: ygot.NewNodePath(
			[]string{"as_numbers"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsNumbers (leaf-list): The AS numbers in this AS path segment.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "as_numbers"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path/as_numbers"
func (n *BgpPeer_UnicastIpv6Prefix_AsPathPathAny) AsNumbers() *BgpPeer_UnicastIpv6Prefix_AsPath_AsNumbersPathAny {
	return &BgpPeer_UnicastIpv6Prefix_AsPath_AsNumbersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"as_numbers"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentType (leaf): Enumeration of segment types.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "segment-type"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path/segment-type"
func (n *BgpPeer_UnicastIpv6Prefix_AsPathPath) SegmentType() *BgpPeer_UnicastIpv6Prefix_AsPath_SegmentTypePath {
	return &BgpPeer_UnicastIpv6Prefix_AsPath_SegmentTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentType (leaf): Enumeration of segment types.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "segment-type"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/as-path/segment-type"
func (n *BgpPeer_UnicastIpv6Prefix_AsPathPathAny) SegmentType() *BgpPeer_UnicastIpv6Prefix_AsPath_SegmentTypePathAny {
	return &BgpPeer_UnicastIpv6Prefix_AsPath_SegmentTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// BgpPeer_UnicastIpv6Prefix_CommunityPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community YANG schema element.
type BgpPeer_UnicastIpv6Prefix_CommunityPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_CommunityPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community YANG schema element.
type BgpPeer_UnicastIpv6Prefix_CommunityPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_Community_CommunityTypePath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/community-type YANG schema element.
type BgpPeer_UnicastIpv6Prefix_Community_CommunityTypePath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_Community_CommunityTypePathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/community-type YANG schema element.
type BgpPeer_UnicastIpv6Prefix_Community_CommunityTypePathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_Community_CustomAsNumberPath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/custom-as-number YANG schema element.
type BgpPeer_UnicastIpv6Prefix_Community_CustomAsNumberPath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_Community_CustomAsNumberPathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/custom-as-number YANG schema element.
type BgpPeer_UnicastIpv6Prefix_Community_CustomAsNumberPathAny struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_Community_CustomAsValuePath represents the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/custom-as-value YANG schema element.
type BgpPeer_UnicastIpv6Prefix_Community_CustomAsValuePath struct {
	*ygot.NodePath
}

// BgpPeer_UnicastIpv6Prefix_Community_CustomAsValuePathAny represents the wildcard version of the /open-traffic-generator-bgp/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/custom-as-value YANG schema element.
type BgpPeer_UnicastIpv6Prefix_Community_CustomAsValuePathAny struct {
	*ygot.NodePath
}

// CommunityType (leaf): The type of community AS number.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "community-type"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/community-type"
func (n *BgpPeer_UnicastIpv6Prefix_CommunityPath) CommunityType() *BgpPeer_UnicastIpv6Prefix_Community_CommunityTypePath {
	return &BgpPeer_UnicastIpv6Prefix_Community_CommunityTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"community-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityType (leaf): The type of community AS number.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "community-type"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/community-type"
func (n *BgpPeer_UnicastIpv6Prefix_CommunityPathAny) CommunityType() *BgpPeer_UnicastIpv6Prefix_Community_CommunityTypePathAny {
	return &BgpPeer_UnicastIpv6Prefix_Community_CommunityTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"community-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CustomAsNumber (leaf): First two octets of 32 bit community AS number between 0 to 65535.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "custom-as-number"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/custom-as-number"
func (n *BgpPeer_UnicastIpv6Prefix_CommunityPath) CustomAsNumber() *BgpPeer_UnicastIpv6Prefix_Community_CustomAsNumberPath {
	return &BgpPeer_UnicastIpv6Prefix_Community_CustomAsNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"custom-as-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// CustomAsNumber (leaf): First two octets of 32 bit community AS number between 0 to 65535.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "custom-as-number"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/custom-as-number"
func (n *BgpPeer_UnicastIpv6Prefix_CommunityPathAny) CustomAsNumber() *BgpPeer_UnicastIpv6Prefix_Community_CustomAsNumberPathAny {
	return &BgpPeer_UnicastIpv6Prefix_Community_CustomAsNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"custom-as-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// CustomAsValue (leaf): Last two octets of 32 bit community AS value between 0 to 65535.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "custom-as-value"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/custom-as-value"
func (n *BgpPeer_UnicastIpv6Prefix_CommunityPath) CustomAsValue() *BgpPeer_UnicastIpv6Prefix_Community_CustomAsValuePath {
	return &BgpPeer_UnicastIpv6Prefix_Community_CustomAsValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"custom-as-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// CustomAsValue (leaf): Last two octets of 32 bit community AS value between 0 to 65535.
// ----------------------------------------
// Defining module: "open-traffic-generator-bgp"
// Instantiating module: "open-traffic-generator-bgp"
// Path from parent: "custom-as-value"
// Path from root: "/bgp-peers/bgp-peer/unicast-ipv6-prefixes/unicast-ipv6-prefix/state/community/custom-as-value"
func (n *BgpPeer_UnicastIpv6Prefix_CommunityPathAny) CustomAsValue() *BgpPeer_UnicastIpv6Prefix_Community_CustomAsValuePathAny {
	return &BgpPeer_UnicastIpv6Prefix_Community_CustomAsValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"custom-as-value"},
			map[string]interface{}{},
			n,
		),
	}
}
